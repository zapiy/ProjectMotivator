version: "3.8"

services:
  postgres:
    container_name: app_database
    image: postgres:16-bookworm
    restart: unless-stopped
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - PGDATA=/var/lib/postgresql/data/
    ports:
      - 5432:5432
    volumes:
      - ./postgres/:/var/lib/postgresql/data/:rw
    networks:
      - mainnet

  rabbitmq:
    container_name: app_rabbitmq
    image: rabbitmq:3.13-management
    networks:
      - mainnet
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/mnesia/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  bot:
    container_name: app_bot
    build: ./bot/
    restart: always
    networks:
      - mainnet
    depends_on:
      - rabbitmq
      - postgres

  backend:
    container_name: app_backend
    build: ./backend/
    restart: always
    ports:
      - 8000:8000
    networks:
      - mainnet
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - ./backend/templates:/backend/templates
      - ./backend/static:/backend/static
      - ./backend/media:/backend/media

  nginx:
    container_name: app_nginx
    image: nginx:1.25-bookworm
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - mainnet
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./backend/static:/data/nginx/static
      - ./backend/media:/data/nginx/media
      - ./nginx/cache:/data/nginx/cache
      - ./nginx/extra:/data/nginx/extra
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/lib/letsencrypt
      - ./certbot/web:/var/www/certbot

  certbot:
    container_name: app_certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    entrypoint: certbot renew
    volumes:
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/var:/var/lib/letsencrypt
      - ./certbot/web:/var/www/certbot

networks:
  mainnet:
